name: Publish Python üêç distributions üì¶ to PyPI

on: [push]


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.7, 3.8, 3.9, 3.10, 3.11]
    
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel cython

    - name: Build wheel
      run: python setup.py sdist bdist_wheel

    - name: Test wheel
      run: |
        pip install dist/*.whl
        # „Åì„Åì„Å´„ÉÜ„Çπ„Éà„Ç≥„Éû„É≥„Éâ„ÇíËøΩÂä†„ÄÇ‰æã: pytest tests/
        python test.py

- name: Use manylinux2010 for Linux wheels
      if: runner.os == 'Linux'
      run: |
        docker pull quay.io/pypa/manylinux2010_x86_64
        docker run --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /bin/bash -c "cd /io && /opt/python/cp${{ matrix.python-version }}-cp${{ matrix.python-version }}*/bin/pip wheel . -w wheelhouse/"
        docker run --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /bin/bash -c "cd /io && /opt/python/cp${{ matrix.python-version }}-cp${{ matrix.python-version }}*/bin/pip install auditwheel && auditwheel repair wheelhouse/* -w /io/dist/"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install twine
      run: |
        python -m pip install --upgrade pip
        pip install twine

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*
